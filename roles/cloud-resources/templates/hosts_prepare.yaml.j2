---

- hosts:  
   - {{cloud_host_alias}}
 
  tasks: 
  
  {% if cloud_provider == 'azr' and azr.image.offer == 'CentOS' -%}
  # enable the default eth0 network to be NM Controlled
  - name: Enable NM_CONTROLLED
    lineinfile:
      regexp: '^(NM_CONTROLLED=)(no)$'
      backrefs: yes
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      line: '\1yes'  
    become: yes
    register: nmcontolled_changed

  - name: restart azure vm
    azure_rm_virtualmachine:
      name: "{{instance_name}}"
      client_id: "{{azr.client_id}}"
      secret: "{{azr.secret}}"
      subscription_id: "{{azr.subscription_id}}"
      tenant: "{{azr.tenant}}"
      location: "{{azr.location}}"      
      resource_group: "{{azr.resource_group}}"
      restarted: yes
    when: nmcontolled_changed is changed
    delegate_to: localhost

  - name: wait for azure restart
    local_action: shell ansible -u {{ azr.cloud_user }} -m ping {{'{{'}} inventory_hostname {{'}}'}}
    register: result
    until: result.rc == 0
    retries: 30
    delay: 10
    when: nmcontolled_changed is changed

  - name: check eth0 is available
    shell: nmcli c s
    register: nmcli_out 
    when: nmcontolled_changed is changed

  # TODO to evaluate change or failure
  - debug: msg={%- raw %} "{{nmcli_out}}"{% endraw %} 
  {% endif %}

  {% if is_rhel -%}
  - name: Subscribe to RedHat 
    redhat_subscription:
      state: present
      username: {{azr.rhn_username}}
      password: {{azr.rhn_password}}
      force_register: True
      pool_ids: {{azr.rhn_pool_ids}}
  - name: Subscribe to needed OpenShift RedHat Repositories
    shell: |
      subscription-manager repos --disable="*" \
       --enable="rhel-7-server-rpms" \
       --enable="rhel-7-server-extras-rpms" \
       --enable="rhel-7-server-ose-3.9-rpms" \
       --enable="rhel-7-fast-datapath-rpms" \
       --enable="rhel-7-server-ansible-2.4-rpms"
  {% endif %}
  
  - name: Install essential and utility packages
    package:
    {%- raw %} 
      name: "{{item}}"
      state: latest
    {% endraw -%}       
    with_items:
      - wget 
      - git 
      - net-tools 
      - bind-utils 
      - yum-utils 
      - iptables-services 
      - bridge-utils 
      - bash-completion 
      - kexec-tools 
      - sos 
      - psacct
      - httpd-tools
      - docker
      - system-storage-manager
      - NetworkManager
      - centos-release-openshift-origin311
      - centos-release-ansible26

  {% if cloud_provider == 'azr' -%}
  - name: Create Azure Cloud Provider Config Directory
    file:
      dest: /etc/azure
      mode: 0600
      state: directory

  - name: Copy Azure Cloud Provider Configuration
    copy:
      src: "/tmp/azure.conf"
      mode: 0600
      dest: /etc/azure/azure.conf
  {% endif %}

{% if is_rhel -%}
  # This is required only for centos machines 
  - name: Add RedHat Registry Certificates
    shell: |
      cd /tmp 
      sudo mkdir -p /etc/rhsm/ca
      sudo wget http://mirror.centos.org/centos/7/os/x86_64/Packages/python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm
      sudo rpm2cpio python-rhsm-certificates-1.19.10-1.el7_4.x86_64.rpm | cpio -iv --to-stdout ./etc/rhsm/ca/redhat-uep.pem | tee  /etc/rhsm/ca/redhat-uep.pem
    args:
      executable: /bin/bash
  
  - name: Check Red Hat Registry Certificates are Present 
    file:
      name: /etc/rhsm/ca/redhat-uep.pem
      state: file
    register: proceed
{% endif %}
  
  - set_fact:
      proceed: {{ proceed | default(True) }}

  - name: Stop Docker
    service:
       name: docker
       enabled: true
       state: stopped 
    when: proceed
 
  - name: Delete /var/lib/docker 
    file:
      name: /var/lib/docker
      state: absent
    run_once: true  
    when: proceed
     
  - name: Reconfigure Docker Storage Setup
    copy:
      src: "/tmp/docker-storage-setup"
      dest: /etc/sysconfig/docker-storage-setup
    run_once: true
    when: proceed

  - name: Enable and Start Docker Service 
    service:
       name: docker
       enabled: true
       state: started
    when: proceed
  
  - name: Enable and Start NetworkManager
    service:
       name: NetworkManager
       enabled: true
       state: started
    when: proceed
