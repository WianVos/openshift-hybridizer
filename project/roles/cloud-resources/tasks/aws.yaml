---
# - name: Provisioning AWS
#   debug:
#    msg: "{{aws}}"

#############################################################################
## Security KeyPair
#############################################################################
- name: "AWS ec2 key pair {{aws.key_pair_name}}"
  ec2_key:
    name: "{{aws.key_pair_name}}"
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
  register: ec2key
  tags:
    - cloud-aws

- name: AWS Save the Key Locally
  copy:
   content: "{{ec2key.key.private_key}}"
   dest: "{{aws.private_key_file}}"
   mode: 0700
  when: ec2key.key.private_key is defined
  tags:
    - cloud-aws

#############################################################################
## VPC Network
#############################################################################
- name: AWS VPC OpenShift
  ec2_vpc_net:
    name: openshift-vpc
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    cidr_block: 192.168.0.0/16
    tags:
      Name: "{{instance_name}}"
      OpenShift_Type: 'Origin'
  register: ec2vpc
  tags:
    - cloud-aws

- name: AWS VPC OpenShift VPC Subnet
  ec2_vpc_subnet:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    vpc_id: "{{ec2vpc.vpc.id}}"
    cidr: 192.168.1.0/24
    resource_tags:
      Name: "{{instance_name}}"
      OpenShift_Type: 'Origin'
  register: openshift_subnet
  tags:
    - cloud-aws

- name: AWS VPC OpenShift Internet Gateway
  ec2_vpc_igw:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    vpc_id: "{{ec2vpc.vpc.id}}"
    tags:
      Name: "{{instance_name}}"
      OpenShift_Type: 'Origin'
  register: ec2igw
  tags:
    - cloud-aws

- name: AWS VPC OpenShift Public Subnet Route Table
  ec2_vpc_route_table:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    vpc_id: "{{ec2vpc.vpc.id}}"
    subnets:
      - "{{ openshift_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ ec2igw.gateway_id }}"   
    tags:
      Name: "{{instance_name}}"
      OpenShift_Type: 'Origin'
  register: public_route_table
  tags:
    - cloud-aws

- name: AWS VPC OpenShift Security Group
  ec2_group:
    name: "{{aws.security_group}}"
    description: "OpenShift Rules"
    vpc_id: "{{ec2vpc.vpc.id}}"
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    rules:
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0  
      - proto: tcp
        ports:
        - 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
        - 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
        - 8443
        cidr_ip: 0.0.0.0/0
  register: securitygroup
  tags:
    - cloud-aws

#############################################################################
## Compute Network
#############################################################################

- name: AWS Create All in one OpenShift Node
  ec2:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    image: "{{aws.image}}"
    instance_type: "{{aws.instance_type}}"
    key_name: "{{aws.key_pair_name}}"
    group: 
    - "{{aws.security_group}}"
    vpc_subnet_id: "{{ openshift_subnet.subnet.id }}"
    instance_tags:
      Name: "{{instance_name}}"
      OpenShift_Type: "Origin"
  register: ec2instance
  tags:
    - cloud-aws

# - debug: msg="{{ec2instance}}"

# Docker Disk
- name: "AWS Add Docker Volume to instance {{ec2instance.instance_ids[0]}}"
  ec2_vol:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    delete_on_termination: True
    instance: "{{ec2instance.instance_ids[0]}}"
    volume_size: 100
    volume_type: 'gp2'
    tags:
      OpenShift_Type: "Origin"
  register: ec2vol
  tags:
    - cloud-aws

# - debug: msg="{{ec2instance}}"
  
- name: AWS Attach Elastic IP
  ec2_eip:
    region: "{{aws.region}}"
    aws_access_key: "{{aws.access_key}}"
    aws_secret_key: "{{aws.secret_key}}"
    device_id: "{{ item }}"
    in_vpc: True
    release_on_disassociation: True
  register: ec2ip
  with_items: "{{ ec2instance.instance_ids}}"
  tags:
    - cloud-aws

- name: Get Public IP
  set_fact:
      public_ip: "{{ec2ip.results[0].public_ip}}"
      dns_name: "{{ec2instance.instances[0].public_dns_name}}"
  tags:
    - cloud-aws

- name: AWS Wait for SSH for instances
  wait_for:
    delay: "1"
    host: "{{ public_ip }}"
    port: "22"
    state: started
    timeout: "30"
  tags:
    - cloud-aws

- debug: 
    msg: "AWS OpenShift Node Details DNS {{dns_name}}  IP {{public_ip}}"
  tags:
    - cloud-aws

#############################################################################
## Write to inventory
##############################################################################
- name: Setup Cloud Inventory Tasks
  include_tasks: cloud_inventory.yaml
  vars:
    cloud_host: "{{ public_ip }}"
    cloud_user: "{{ aws.cloud_user}}"
    private_key_file: "{{aws.private_key_file}}"
    cloud_host_alias: "aws-openshift"
    cloud_provider: "aws"
    is_rhel: "{{aws.is_rhel}}"
    hybricloud_inventory_dir: "{{hybridcloud_distro_base_dir}}/aws/inventory"
    hybridcloud_distro_dir: "{{hybridcloud_distro_base_dir}}/aws"
  tags:
    - cloud-aws